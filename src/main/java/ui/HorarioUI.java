/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package ui;

import com.raven.datechooser.DateChooser;
import com.raven.datechooser.SelectedAction;
import conexion.Conn;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.Arrays;
import java.util.List;
import java.util.Objects;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.TurnoX;
import model.Usuario;

/**
 *
 * @author Ricardo Bermudez
 */
public class HorarioUI extends javax.swing.JFrame {

    List<Usuario> listaUsuarios;
    List<TurnoX> listaTurnos;

    DateChooser dateChooser;

    /**
     * Creates new form Horario
     */
    public HorarioUI() {
        initComponents();
        dateChooser = new DateChooser();
        dateChooser.setDateFormat(TurnoUI.DATE_FORMAT);
        dateChooser.setTextRefernce(txtFecha);
        dateChooser.addEventDateChooser((a, sd) -> {
            if (a.getAction() == SelectedAction.DAY_SELECTED) {
                dateChooser.hidePopup();
                LocalDate ld = LocalDate.of(sd.getYear(), sd.getMonth(), sd.getDay());
                txtFecha.setText(ld.format(DateTimeFormatter.ofPattern(TurnoUI.DATE_FORMAT)));
            }
        });
        actualizar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaTurnos = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaEmpleados = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        btnActualizar = new javax.swing.JButton();
        btnAsignar = new javax.swing.JButton();
        txtFecha = new javax.swing.JTextField();

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("Empleados");

        tablaTurnos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Descansos", "Jornadas", "Fecha inicio", "Fecha fin"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaTurnos.setRowHeight(30);
        tablaTurnos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tablaTurnos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tablaTurnos.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tablaTurnos);

        tablaEmpleados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cedula", "Nombre", "Cargo", "Horario (ID)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaEmpleados.setRowHeight(30);
        tablaEmpleados.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tablaEmpleados.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tablaEmpleados.getTableHeader().setReorderingAllowed(false);
        tablaEmpleados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tablaEmpleadosMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tablaEmpleados);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel2.setText("Turnos disponibles");

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnAsignar.setText("Asignar horario");
        btnAsignar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAsignarActionPerformed(evt);
            }
        });

        txtFecha.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                txtFechaMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 379, Short.MAX_VALUE)
                                .addGap(18, 18, 18))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(196, 196, 196)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 379, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnActualizar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAsignar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnActualizar)
                    .addComponent(btnAsignar)
                    .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(92, 92, 92))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tablaEmpleadosMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaEmpleadosMouseReleased

    }//GEN-LAST:event_tablaEmpleadosMouseReleased

    private void btnAsignarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAsignarActionPerformed
        int rowEmp = tablaEmpleados.getSelectedRow();
        int rowTurno = tablaTurnos.getSelectedRow();

        if (rowEmp < 0 || rowTurno < 0) {
            return;
        }

        if (!(JOptionPane.showConfirmDialog(this, "Confirmar", "", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION)) {
            return;
        }

        TurnoX tSel = listaTurnos.get(rowTurno);
        Usuario uSel = listaUsuarios.get(rowEmp);
        uSel.setHorarioId(tSel.getId());

        boolean res = Conn.updateUsuario(uSel);

        if (res) {
            Main.log("Asignado");
            actualizar();
        } else {
            Main.log(Main.GENERIC_ERROR);
        }
    }//GEN-LAST:event_btnAsignarActionPerformed

    private void txtFechaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtFechaMouseReleased
        dateChooser.showPopup(txtFecha, 0, txtFecha.getHeight());
    }//GEN-LAST:event_txtFechaMouseReleased

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        actualizar();
    }//GEN-LAST:event_btnActualizarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnAsignar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tablaEmpleados;
    private javax.swing.JTable tablaTurnos;
    private javax.swing.JTextField txtFecha;
    // End of variables declaration//GEN-END:variables

    private void actualizar() {
        String fechaStr = txtFecha.getText();
        if (fechaStr.equals("")) {
            return;
        }
        LocalDate ld = LocalDate.parse(fechaStr, DateTimeFormatter.ofPattern("dd/MM/yyyy"));
        listaUsuarios = Conn.getUsuario(null);
        listaTurnos = Conn.getTurnos(ld);

        if (listaUsuarios != null) {
            DefaultTableModel model = (DefaultTableModel) tablaEmpleados.getModel();
            model.setRowCount(0);
            for (Usuario u : listaUsuarios) {
                model.addRow(new String[]{
                    u.getCedula(),
                    u.getNombre() + " " + u.getApellido(),
                    u.getCargo(),
                    !Objects.isNull(u.getHorarioId()) ? (u.getHorarioId() + "") : " - "
                }
                );
            }
            tablaEmpleados.setModel(model);
        }

        if (listaTurnos != null) {
            DefaultTableModel model = (DefaultTableModel) tablaTurnos.getModel();
            model.setRowCount(0);
            for (TurnoX t : listaTurnos) {
                String row[] = new String[]{
                    t.getId() + "",
                    t.getDescanso().toString(),
                    Arrays.toString(t.getTurnos()),
                    t.getInicioTurnoX().format(DateTimeFormatter.ofPattern(TurnoUI.DATE_FORMAT)),
                    t.getFinTurnoX().format(DateTimeFormatter.ofPattern(TurnoUI.DATE_FORMAT))
                };
                model.addRow(row);
            }

            tablaTurnos.setModel(model);
        }
    }

    public static void main(String[] args) {
        HorarioUI horarioUI = new HorarioUI();
        horarioUI.setDefaultCloseOperation(EXIT_ON_CLOSE);
        horarioUI.setVisible(true);
        horarioUI.setLocationRelativeTo(null);
    }

}
